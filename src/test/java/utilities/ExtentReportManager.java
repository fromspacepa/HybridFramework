package utilities;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentReporter;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;
import org.apache.commons.mail.DataSourceResolver;
import org.apache.commons.mail.DefaultAuthenticator;
import org.apache.commons.mail.EmailAttachment;
import org.apache.commons.mail.ImageHtmlEmail;
import org.apache.commons.mail.resolver.DataSourceUrlResolver;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;
import testBase.BaseClass;

import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

public class ExtentReportManager implements ITestListener {
    public ExtentSparkReporter sparkReporter;
    public ExtentReports extent;
    public ExtentTest test;

    String reportName;

    public void onStart(ITestContext Context) {
        /*
        SimpleDateFormat df = new SimpleDateFormate("yyyy.MM.dd.HH.mm.ss");
        Date dt = new Date();
        String currentDateTimesStamp = df.format(dt;
         */

        String timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());//This String is assigned with the format of date.

        reportName = "Test-Report-" + timeStamp + ".html";
        sparkReporter = new ExtentSparkReporter("./reports/" + reportName);//This is the path of our report, where it is going to be generated/saved.

        sparkReporter.config().setDocumentTitle("openCart Automation Report");//This is going to be the Title of an extentReport.
        sparkReporter.config().setReportName("openCart Functional Testing");//This is going to be the name of an extentReport.
        sparkReporter.config().setTheme(Theme.DARK);//This is going to be the Theme of an extentReport.

        extent = new ExtentReports();
        extent.attachReporter(sparkReporter);
        extent.setSystemInfo("Application", "openCart");
        extent.setSystemInfo("Module", "Admin");
        extent.setSystemInfo("Sub Module", "Customers");
        extent.setSystemInfo("User Name", System.getProperty("user.name"));
        extent.setSystemInfo("Environment", "QA");

        String operatingSystem = Context.getCurrentXmlTest().getParameter("operatingSystem");
        extent.setSystemInfo("Operating System", operatingSystem);

        String browser = Context.getCurrentXmlTest().getParameter("browser");
        extent.setSystemInfo("Browser", browser);

        List<String> includedGroups = Context.getCurrentXmlTest().getIncludedGroups();
        if (!includedGroups.isEmpty()) {
            extent.setSystemInfo("Groups", includedGroups.toString());

        }
    }

    public void onTestSuccess(ITestResult result) {
        test = extent.createTest(result.getTestClass().getName());
        test.assignCategory(result.getMethod().getGroups());//This is to display groups within an extentReport.
        test.log(Status.PASS, result.getName() + "Test successfully executed!");
    }

    public void onTestFailure(ITestResult result) {
        test = extent.createTest(result.getTestClass().getName());
        test.assignCategory(result.getMethod().getGroups());
        test.log(Status.FAIL, result.getName() + "Test execution got FAILED!!!");
        test.log(Status.INFO, result.getThrowable().getMessage());

        try {
            String imgPath = new BaseClass().captureScreen(result.getName());
            test.addScreenCaptureFromPath(imgPath);
        } catch (IOException e1) {
            e1.printStackTrace();
        }
    }

    public void onTestSkipped(ITestResult result) {
        test = extent.createTest(result.getTestClass().getName());
        test.assignCategory(result.getMethod().getGroups());
        test.log(Status.SKIP, result.getName() + "Test execution got SKIPPED!!!");
        test.log(Status.INFO, result.getThrowable().getMessage());
    }

    //This method is to automatically open the report (which is generated by the ExtentReport) after testCase execution.
    public void onFinish(ITestContext testContext) {
        extent.flush();

        String pathOfExtentReport = System.getProperty("user.dir") + "/reports/" + reportName;
        File extentReport = new File(pathOfExtentReport);

        try {
            Desktop.getDesktop().browse(extentReport.toURI());
        } catch (IOException e) {
            e.printStackTrace();
        }

         /*
        //This method is to automatically send the report by email (from you to a specific person email or groups of emails that you specified in this method).
        //I currently commented, you can modify it per your preference and use this method.
        //To implement this method, you have to add "Java Email Dependencies" in your pom.xml file, and it can be downloaded form maven.repository.
        try {
            URL urlPath = new URL(System.getProperty("user.dir") + "/reports/" + reportName);
            //Create the email message
            ImageHtmlEmail email = new ImageHtmlEmail();
            email.setDataSourceResolver(new DataSourceUrlResolver(urlPath));
            email.setHostName("smtp.googlemail.com");
            email.setSmtpPort(465);
            email.setAuthenticator(new DefaultAuthenticator("hamed.sdet@gmail.com", "Ultimate$2025"));
            email.setSSLOnConnect(true);
            email.setFrom("hamed.sdet@gmail.com");
            //Sender
            email.setSubject("Test Results");
            email.setMsg("Please find the enclosed report...");
            //Receiver OR you can add multiple email addresses for multiple people OR there might be a single group email address that multiple people is going to receive your email.
            email.addTo("fhamed932@gmail.com");
            //This is to attach the report to the email.
            email.attach(sparkReporter, "please check the report...");
            //Send
            email.send();
        } catch (Exception e) {
            e.printStackTrace();
        }

        */


    }


}




